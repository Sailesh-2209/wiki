{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saile\\\\Desktop\\\\Sailesh\\\\React\\\\Wiki\\\\wiki-client\\\\components\\\\EditCharacterModal.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport { baseURL } from \"../constants/baseURL\";\nimport modalStyles from \"../styles/Modal.module.css\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    height: \"400px\",\n    width: \"550px\",\n    backgroundColor: \"#efefef\"\n  }\n};\nexport default function EditCharacterModal(props) {\n  const {\n    isOpen,\n    setIsOpen,\n    name,\n    setName,\n    actor,\n    setActor,\n    image,\n    setImage,\n    cid,\n    setCid,\n    pid,\n    token,\n    uid\n  } = props;\n  const {\n    0: saving,\n    1: setSaving\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const handleEditSave = () => {\n    setSaving(true);\n    axios.post(`${baseURL}/programs/${pid}/${cid}`, {\n      name,\n      actor,\n      image,\n      cid,\n      pid,\n      uid\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(value => {\n      if (value.data.error) {\n        setError(value.data.error);\n        setSaving(false);\n      } else {\n        setSaving(false);\n        setIsOpen(false);\n        Router.reload();\n      }\n\n      console.log(value);\n    }).catch(error => {\n      Router.reload();\n      console.log(error);\n    });\n  };\n\n  const handleModalClose = () => {\n    setIsOpen(false);\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    style: customStyles,\n    children: saving ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalStyles.loader,\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.headingContainer,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: modalStyles.heading,\n            children: \"Add a new character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.createCharErrCont,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.modalBody,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: modalStyles.form,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: modalStyles.name,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: modalStyles.label,\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: modalStyles.input,\n                type: \"text\",\n                id: \"name\",\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: modalStyles.dates,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: modalStyles.label,\n                htmlFor: \"start\",\n                children: \"Actor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"start\",\n                name: \"start\",\n                className: modalStyles.input,\n                value: actor,\n                onChange: e => setActor(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: modalStyles.image,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: modalStyles.label,\n                htmlFor: \"image\",\n                children: \"Image Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"image\",\n                name: \"image\",\n                className: modalStyles.input,\n                value: image,\n                onChange: e => setImage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.footer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: modalStyles.saveButton,\n            onClick: () => handleEditSave(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: modalStyles.cancelButton,\n            onClick: () => handleModalClose(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/saile/Desktop/Sailesh/React/Wiki/wiki-client/components/EditCharacterModal.js"],"names":["React","useState","Modal","ClipLoader","Router","axios","baseURL","modalStyles","customStyles","content","top","left","right","bottom","marginRight","transform","height","width","backgroundColor","EditCharacterModal","props","isOpen","setIsOpen","name","setName","actor","setActor","image","setImage","cid","setCid","pid","token","uid","saving","setSaving","error","setError","handleEditSave","post","headers","Authorization","then","value","data","reload","console","log","catch","handleModalClose","loader","container","headingContainer","heading","divider","createCharErrCont","message","modalBody","form","label","input","e","target","dates","footer","saveButton","cancelButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport Router from \"next/router\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../constants/baseURL\";\r\nimport modalStyles from \"../styles/Modal.module.css\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    height: \"400px\",\r\n    width: \"550px\",\r\n    backgroundColor: \"#efefef\",\r\n  },\r\n};\r\n\r\nexport default function EditCharacterModal(props) {\r\n  const {\r\n    isOpen,\r\n    setIsOpen,\r\n    name,\r\n    setName,\r\n    actor,\r\n    setActor,\r\n    image,\r\n    setImage,\r\n    cid,\r\n    setCid,\r\n    pid,\r\n    token,\r\n    uid,\r\n  } = props;\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleEditSave = () => {\r\n    setSaving(true);\r\n    axios\r\n      .post(\r\n        `${baseURL}/programs/${pid}/${cid}`,\r\n        {\r\n          name,\r\n          actor,\r\n          image,\r\n          cid,\r\n          pid,\r\n          uid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((value) => {\r\n        if (value.data.error) {\r\n          setError(value.data.error);\r\n          setSaving(false);\r\n        } else {\r\n          setSaving(false);\r\n          setIsOpen(false);\r\n          Router.reload();\r\n        }\r\n        console.log(value);\r\n      })\r\n      .catch((error) => {\r\n        Router.reload();\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsOpen(false);\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} style={customStyles}>\r\n      {saving ? (\r\n        <div className={modalStyles.loader}>\r\n          <ClipLoader />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={modalStyles.container}>\r\n            <div className={modalStyles.headingContainer}>\r\n              <h2 className={modalStyles.heading}>Add a new character</h2>\r\n            </div>\r\n            <div className={modalStyles.divider}></div>\r\n            {error ? (\r\n              <div className={modalStyles.createCharErrCont}>\r\n                <p>{error.message}</p>\r\n              </div>\r\n            ) : (\r\n              <div className={modalStyles.modalBody}>\r\n                <form className={modalStyles.form}>\r\n                  <div className={modalStyles.name}>\r\n                    <label className={modalStyles.label} htmlFor=\"name\">\r\n                      Name\r\n                    </label>\r\n                    <input\r\n                      className={modalStyles.input}\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className={modalStyles.dates}>\r\n                    <label className={modalStyles.label} htmlFor=\"start\">\r\n                      Actor\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"start\"\r\n                      name=\"start\"\r\n                      className={modalStyles.input}\r\n                      value={actor}\r\n                      onChange={(e) => setActor(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className={modalStyles.image}>\r\n                    <label className={modalStyles.label} htmlFor=\"image\">\r\n                      Image Address\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"image\"\r\n                      name=\"image\"\r\n                      className={modalStyles.input}\r\n                      value={image}\r\n                      onChange={(e) => setImage(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n            <div className={modalStyles.divider}></div>\r\n            <div className={modalStyles.footer}>\r\n              <button\r\n                className={modalStyles.saveButton}\r\n                onClick={() => handleEditSave()}\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                className={modalStyles.cancelButton}\r\n                onClick={() => handleModalClose()}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}