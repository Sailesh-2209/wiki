{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saile\\\\Desktop\\\\Sailesh\\\\React\\\\Wiki\\\\wiki-client\\\\constants\\\\authContext.js\";\nimport { createContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { baseURL } from \"../constants/baseURL\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  error: null,\n  token: null,\n  login: () => {},\n  signup: () => {},\n  logout: () => {},\n  checkAuth: () => {}\n});\nexport const AuthContextProvider = ({\n  children\n}) => {\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n\n  const login = (username, password) => {\n    axios.post(`${baseURL}/login`, {\n      username,\n      password\n    }).then(value => {\n      let {\n        user,\n        error,\n        token\n      } = value.data;\n      setUser(user);\n      setError(error);\n      setToken(token);\n      localStorage.setItem(\"jwt_token\", token);\n      localStorage.setItem(\"uid\", user._id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const signup = (username, password) => {\n    axios.post(`${baseURL}/register`, {\n      username,\n      password\n    }).then(value => {\n      let {\n        user,\n        error,\n        token\n      } = value.data;\n      setUser(user);\n      setError(error);\n      setToken(token);\n      localStorage.setItem(\"jwt_token\", token);\n      localStorage.setItem(\"uid\", user._id);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    setError(null);\n    setToken(null);\n    localStorage.removeItem(\"jwt_token\");\n    localStorage.removeItem(\"uid\");\n    router.push(\"/\");\n  };\n\n  const checkAuth = async token => {\n    let response = await axios.post(`${baseURL}/checkauth`, {\n      hello: \"world\"\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.authorized;\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      error,\n      token,\n      login: (username, password) => login(username, password),\n      signup: (username, password) => signup(username, password),\n      logout: () => logout(),\n      checkAuth: token => checkAuth(token)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["C:/Users/saile/Desktop/Sailesh/React/Wiki/wiki-client/constants/authContext.js"],"names":["createContext","useState","useRouter","axios","baseURL","AuthContext","user","error","token","login","signup","logout","checkAuth","AuthContextProvider","children","router","setUser","setError","setToken","username","password","post","then","value","data","localStorage","setItem","_id","catch","console","log","removeItem","push","response","hello","headers","Authorization","authorized"],"mappings":"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","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../constants/baseURL\";\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  error: null,\r\n  token: null,\r\n  login: () => {},\r\n  signup: () => {},\r\n  logout: () => {},\r\n  checkAuth: () => {},\r\n});\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const router = useRouter();\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n\r\n  const login = (username, password) => {\r\n    axios\r\n      .post(`${baseURL}/login`, {\r\n        username,\r\n        password,\r\n      })\r\n      .then((value) => {\r\n        let { user, error, token } = value.data;\r\n        setUser(user);\r\n        setError(error);\r\n        setToken(token);\r\n        localStorage.setItem(\"jwt_token\", token);\r\n        localStorage.setItem(\"uid\", user._id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const signup = (username, password) => {\r\n    axios\r\n      .post(`${baseURL}/register`, {\r\n        username,\r\n        password,\r\n      })\r\n      .then((value) => {\r\n        let { user, error, token } = value.data;\r\n        setUser(user);\r\n        setError(error);\r\n        setToken(token);\r\n        localStorage.setItem(\"jwt_token\", token);\r\n        localStorage.setItem(\"uid\", user._id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setError(null);\r\n    setToken(null);\r\n    localStorage.removeItem(\"jwt_token\");\r\n    localStorage.removeItem(\"uid\");\r\n    router.push(\"/\");\r\n  };\r\n\r\n  const checkAuth = async (token) => {\r\n    let response = await axios.post(\r\n      `${baseURL}/checkauth`,\r\n      {\r\n        hello: \"world\",\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data.authorized;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        error,\r\n        token,\r\n        login: (username, password) => login(username, password),\r\n        signup: (username, password) => signup(username, password),\r\n        logout: () => logout(),\r\n        checkAuth: (token) => checkAuth(token),\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}