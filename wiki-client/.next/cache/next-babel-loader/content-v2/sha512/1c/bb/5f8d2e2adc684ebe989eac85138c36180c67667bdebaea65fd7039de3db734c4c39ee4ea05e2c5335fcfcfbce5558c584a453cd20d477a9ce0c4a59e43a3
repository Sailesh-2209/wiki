{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saile\\\\Desktop\\\\Sailesh\\\\React\\\\Wiki\\\\wiki-client\\\\components\\\\CharacterModals.js\";\nimport React from \"react\";\nimport Router from \"next/router\";\nimport Modal from \"react-modal\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport axios from \"axios\";\nimport { baseURL } from \"../constants/baseURL\";\nimport styles from \"../styles/Character.module.css\";\nimport modalStyles from \"../styles/Modal.module.css\";\nexport default function CharacterModals(props) {\n  const {\n    customStyles,\n    customStyles2,\n    isConfirmModalOpen,\n    isEditModalOpen,\n    isDeleting,\n    programDeleteError,\n    handleOnDeleteError,\n    handleDeleteProgram,\n    setIsConfirmModalOpen,\n    setIsEditModalOpen,\n    name,\n    description,\n    start,\n    end,\n    imgAddress,\n    saving,\n    newError,\n    setName,\n    setDescription,\n    setStart,\n    setEnd,\n    setImgAddress,\n    setSaving,\n    setNewError,\n    stateUID,\n    stateToken,\n    pid\n  } = props;\n\n  const handleEditProgram = () => {\n    setSaving(true);\n    axios.post(`${baseURL}/programs/${pid}/edit`, {\n      name: name,\n      description: description,\n      startedIn: start,\n      endedIn: end,\n      image: imgAddress,\n      uid: stateUID\n    }, {\n      headers: {\n        Authorization: `Bearer ${stateToken}`\n      }\n    }).then(value => {\n      if (value.data.error !== null) {\n        setNewError(value.data.error);\n        setSaving(false);\n      } else {\n        setIsEditModalOpen(false);\n        setNewError(null);\n        setSaving(false);\n        Router.reload();\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const handleEditModalClose = () => {\n    setIsEditModalOpen(false);\n    setNewError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      style: customStyles,\n      isOpen: isConfirmModalOpen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.confirmModalContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.modalHeading,\n          children: \"Do you want to delete this show?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), isDeleting ? /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : programDeleteError ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.modalError,\n            children: [\"\\u24D8 \", programDeleteError.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.modalBtnContainer,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.programDelBtn,\n              onClick: () => handleOnDeleteError(),\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.modalBtnContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.programDelBtn,\n            onClick: () => handleDeleteProgram(),\n            children: \"YES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.programUpdBtn,\n            onClick: () => setIsConfirmModalOpen(false),\n            children: \"NO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      style: customStyles2,\n      isOpen: isEditModalOpen,\n      children: saving ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.loader,\n        children: /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.headingContainer,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: modalStyles.heading,\n              children: \"Edit show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), newError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.errorContainer,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: newError.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.modalBody,\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: modalStyles.form,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: modalStyles.name,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: modalStyles.label,\n                  htmlFor: \"name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: modalStyles.input,\n                  type: \"text\",\n                  id: \"name\",\n                  name: \"name\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: modalStyles.description,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: modalStyles.label,\n                  htmlFor: \"description\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  type: \"text\",\n                  id: \"description\",\n                  name: \"description\",\n                  className: modalStyles.input,\n                  value: description,\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: modalStyles.dates,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: modalStyles.label,\n                htmlFor: \"start\",\n                children: \"Started in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"start\",\n                name: \"start\",\n                className: modalStyles.input,\n                value: start,\n                onChange: e => setStart(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: modalStyles.dates,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: modalStyles.label,\n                htmlFor: \"end\",\n                children: \"Ended in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"end\",\n                name: \"end\",\n                className: modalStyles.input,\n                value: end,\n                onChange: e => setEnd(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: modalStyles.image,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: modalStyles.label,\n                htmlFor: \"image\",\n                children: \"Image Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"image\",\n                name: \"image\",\n                className: modalStyles.input,\n                value: imgAddress,\n                onChange: e => setImgAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.footer,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: modalStyles.saveButton,\n              onClick: () => handleEditProgram(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: modalStyles.cancelButton,\n              onClick: () => handleEditModalClose(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/saile/Desktop/Sailesh/React/Wiki/wiki-client/components/CharacterModals.js"],"names":["React","Router","Modal","ClipLoader","axios","baseURL","styles","modalStyles","CharacterModals","props","customStyles","customStyles2","isConfirmModalOpen","isEditModalOpen","isDeleting","programDeleteError","handleOnDeleteError","handleDeleteProgram","setIsConfirmModalOpen","setIsEditModalOpen","name","description","start","end","imgAddress","saving","newError","setName","setDescription","setStart","setEnd","setImgAddress","setSaving","setNewError","stateUID","stateToken","pid","handleEditProgram","post","startedIn","endedIn","image","uid","headers","Authorization","then","value","data","error","reload","catch","console","log","handleEditModalClose","confirmModalContainer","modalHeading","modalError","message","modalBtnContainer","programDelBtn","programUpdBtn","loader","container","headingContainer","heading","divider","errorContainer","modalBody","form","label","input","e","target","dates","footer","saveButton","cancelButton"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Router from \"next/router\";\r\nimport Modal from \"react-modal\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../constants/baseURL\";\r\nimport styles from \"../styles/Character.module.css\";\r\nimport modalStyles from \"../styles/Modal.module.css\";\r\n\r\nexport default function CharacterModals(props) {\r\n  const {\r\n    customStyles,\r\n    customStyles2,\r\n    isConfirmModalOpen,\r\n    isEditModalOpen,\r\n    isDeleting,\r\n    programDeleteError,\r\n    handleOnDeleteError,\r\n    handleDeleteProgram,\r\n    setIsConfirmModalOpen,\r\n    setIsEditModalOpen,\r\n    name,\r\n    description,\r\n    start,\r\n    end,\r\n    imgAddress,\r\n    saving,\r\n    newError,\r\n    setName,\r\n    setDescription,\r\n    setStart,\r\n    setEnd,\r\n    setImgAddress,\r\n    setSaving,\r\n    setNewError,\r\n    stateUID,\r\n    stateToken,\r\n    pid,\r\n  } = props;\r\n\r\n  const handleEditProgram = () => {\r\n    setSaving(true);\r\n    axios\r\n      .post(\r\n        `${baseURL}/programs/${pid}/edit`,\r\n        {\r\n          name: name,\r\n          description: description,\r\n          startedIn: start,\r\n          endedIn: end,\r\n          image: imgAddress,\r\n          uid: stateUID,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${stateToken}`,\r\n          },\r\n        }\r\n      )\r\n      .then((value) => {\r\n        if (value.data.error !== null) {\r\n          setNewError(value.data.error);\r\n          setSaving(false);\r\n        } else {\r\n          setIsEditModalOpen(false);\r\n          setNewError(null);\r\n          setSaving(false);\r\n          Router.reload();\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleEditModalClose = () => {\r\n    setIsEditModalOpen(false);\r\n    setNewError(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal style={customStyles} isOpen={isConfirmModalOpen}>\r\n        <div className={styles.confirmModalContainer}>\r\n          <div className={styles.modalHeading}>\r\n            Do you want to delete this show?\r\n          </div>\r\n          {isDeleting ? (\r\n            <ClipLoader />\r\n          ) : programDeleteError ? (\r\n            <>\r\n              <div className={styles.modalError}>\r\n                &#9432; {programDeleteError.message}\r\n              </div>\r\n              <div className={styles.modalBtnContainer}>\r\n                <button\r\n                  className={styles.programDelBtn}\r\n                  onClick={() => handleOnDeleteError()}\r\n                >\r\n                  OK\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className={styles.modalBtnContainer}>\r\n              <button\r\n                className={styles.programDelBtn}\r\n                onClick={() => handleDeleteProgram()}\r\n              >\r\n                YES\r\n              </button>\r\n              <button\r\n                className={styles.programUpdBtn}\r\n                onClick={() => setIsConfirmModalOpen(false)}\r\n              >\r\n                NO\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n      <Modal style={customStyles2} isOpen={isEditModalOpen}>\r\n        {saving ? (\r\n          <div className={modalStyles.loader}>\r\n            <ClipLoader />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={modalStyles.container}>\r\n              <div className={modalStyles.headingContainer}>\r\n                <h2 className={modalStyles.heading}>Edit show</h2>\r\n              </div>\r\n              <div className={modalStyles.divider}></div>\r\n              {newError ? (\r\n                <div className={modalStyles.errorContainer}>\r\n                  <p>{newError.message}</p>\r\n                </div>\r\n              ) : (\r\n                <div className={modalStyles.modalBody}>\r\n                  <form className={modalStyles.form}>\r\n                    <div className={modalStyles.name}>\r\n                      <label className={modalStyles.label} htmlFor=\"name\">\r\n                        Name\r\n                      </label>\r\n                      <input\r\n                        className={modalStyles.input}\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className={modalStyles.description}>\r\n                      <label\r\n                        className={modalStyles.label}\r\n                        htmlFor=\"description\"\r\n                      >\r\n                        Description\r\n                      </label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        className={modalStyles.input}\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                  <div className={modalStyles.dates}>\r\n                    <label className={modalStyles.label} htmlFor=\"start\">\r\n                      Started in\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"start\"\r\n                      name=\"start\"\r\n                      className={modalStyles.input}\r\n                      value={start}\r\n                      onChange={(e) => setStart(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className={modalStyles.dates}>\r\n                    <label className={modalStyles.label} htmlFor=\"end\">\r\n                      Ended in\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"end\"\r\n                      name=\"end\"\r\n                      className={modalStyles.input}\r\n                      value={end}\r\n                      onChange={(e) => setEnd(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className={modalStyles.image}>\r\n                    <label className={modalStyles.label} htmlFor=\"image\">\r\n                      Image Address\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"image\"\r\n                      name=\"image\"\r\n                      className={modalStyles.input}\r\n                      value={imgAddress}\r\n                      onChange={(e) => setImgAddress(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className={modalStyles.divider}></div>\r\n              <div className={modalStyles.footer}>\r\n                <button\r\n                  className={modalStyles.saveButton}\r\n                  onClick={() => handleEditProgram()}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className={modalStyles.cancelButton}\r\n                  onClick={() => handleEditModalClose()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}