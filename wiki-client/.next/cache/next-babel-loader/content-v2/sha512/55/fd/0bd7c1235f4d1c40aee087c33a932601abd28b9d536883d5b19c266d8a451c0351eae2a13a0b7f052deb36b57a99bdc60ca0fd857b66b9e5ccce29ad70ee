{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saile\\\\Desktop\\\\Sailesh\\\\React\\\\Wiki\\\\wiki-client\\\\components\\\\Character.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"../styles/Character.module.css\";\nimport EditCharacterModal from \"./EditCharacterModal\";\nimport DeleteCharacterModal from \"./DeleteCharacterModal\";\nexport function Character({\n  loggedIn,\n  characters,\n  uid,\n  setIsCreateCharacterModalOpen,\n  pid,\n  token\n}) {\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: actor,\n    1: setActor\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: cid,\n    1: setCid\n  } = useState(\"\");\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: isDeleteOpen,\n    1: setIsDeleteOpen\n  } = useState(false);\n\n  const handleCharacterEdit = (charName, charActor, charImage, charId) => {\n    setIsOpen(true);\n    setName(charName);\n    setActor(charActor);\n    setImage(charImage);\n    setCid(charId);\n  };\n\n  const handleCharacterDelete = charId => {\n    setCid(charId);\n    setIsDeleteOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EditCharacterModal, {\n      isOpen: isOpen,\n      setIsOpen: setIsOpen,\n      name: name,\n      setName: setName,\n      actor: actor,\n      setActor: setActor,\n      image: image,\n      setImage: setImage,\n      cid: cid,\n      setCid: setCid,\n      pid: pid,\n      token: token,\n      uid: uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteCharacterModal, {\n      isOpen: isDeleteOpen,\n      setIsOpen: setIsDeleteOpen,\n      cid: cid,\n      pid: pid,\n      token: token,\n      uid: uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.charPageHeading,\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.charactersContainer,\n      children: [loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.characterCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.characterLeft,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.addIcon,\n            src: \"/add.svg\",\n            alt: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.characterRight,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.programUpdBtn,\n            onClick: () => setIsCreateCharacterModalOpen(true),\n            children: \"+ ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : null, characters.characters.map(character => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.characterCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.characterLeft,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.image,\n            alt: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.characterRight,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: character.actor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.buttonContainer,\n            children: character.createdBy === uid && loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.programDelBtn,\n                onClick: () => handleCharacterDelete(character._id),\n                children: \"DELETE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.programUpdBtn,\n                onClick: () => handleCharacterEdit(character.name, character.actor, character.image, character._id),\n                children: \"EDIT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, character._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/saile/Desktop/Sailesh/React/Wiki/wiki-client/components/Character.js"],"names":["React","useState","useEffect","styles","EditCharacterModal","DeleteCharacterModal","Character","loggedIn","characters","uid","setIsCreateCharacterModalOpen","pid","token","name","setName","actor","setActor","image","setImage","cid","setCid","isOpen","setIsOpen","isDeleteOpen","setIsDeleteOpen","handleCharacterEdit","charName","charActor","charImage","charId","handleCharacterDelete","charPageHeading","charactersContainer","characterCard","characterLeft","addIcon","characterRight","programUpdBtn","map","character","buttonContainer","createdBy","programDelBtn","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../styles/Character.module.css\";\r\nimport EditCharacterModal from \"./EditCharacterModal\";\r\nimport DeleteCharacterModal from \"./DeleteCharacterModal\";\r\n\r\nexport function Character({\r\n  loggedIn,\r\n  characters,\r\n  uid,\r\n  setIsCreateCharacterModalOpen,\r\n  pid,\r\n  token,\r\n}) {\r\n  const [name, setName] = useState(\"\");\r\n  const [actor, setActor] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [cid, setCid] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\r\n\r\n  const handleCharacterEdit = (charName, charActor, charImage, charId) => {\r\n    setIsOpen(true);\r\n    setName(charName);\r\n    setActor(charActor);\r\n    setImage(charImage);\r\n    setCid(charId);\r\n  };\r\n\r\n  const handleCharacterDelete = (charId) => {\r\n    setCid(charId);\r\n    setIsDeleteOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <EditCharacterModal\r\n        isOpen={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        name={name}\r\n        setName={setName}\r\n        actor={actor}\r\n        setActor={setActor}\r\n        image={image}\r\n        setImage={setImage}\r\n        cid={cid}\r\n        setCid={setCid}\r\n        pid={pid}\r\n        token={token}\r\n        uid={uid}\r\n      />\r\n      <DeleteCharacterModal\r\n        isOpen={isDeleteOpen}\r\n        setIsOpen={setIsDeleteOpen}\r\n        cid={cid}\r\n        pid={pid}\r\n        token={token}\r\n        uid={uid}\r\n      />\r\n      <div className={styles.charPageHeading}>Characters</div>\r\n      <div className={styles.charactersContainer}>\r\n        {loggedIn ? (\r\n          <div className={styles.characterCard}>\r\n            <div className={styles.characterLeft}>\r\n              <img className={styles.addIcon} src=\"/add.svg\" alt=\"add\" />\r\n            </div>\r\n            <div className={styles.characterRight}>\r\n              <h2>Add Character</h2>\r\n              <button\r\n                className={styles.programUpdBtn}\r\n                onClick={() => setIsCreateCharacterModalOpen(true)}\r\n              >\r\n                + ADD\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {characters.characters.map((character) => (\r\n          <div className={styles.characterCard} key={character._id}>\r\n            <div className={styles.characterLeft}>\r\n              <img src={character.image} alt={character.name} />\r\n            </div>\r\n            <div className={styles.characterRight}>\r\n              <h2>{character.name}</h2>\r\n              <h3>{character.actor}</h3>\r\n              <div className={styles.buttonContainer}>\r\n                {character.createdBy === uid && loggedIn ? (\r\n                  <>\r\n                    <button\r\n                      className={styles.programDelBtn}\r\n                      onClick={() => handleCharacterDelete(character._id)}\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                    <button\r\n                      className={styles.programUpdBtn}\r\n                      onClick={() =>\r\n                        handleCharacterEdit(\r\n                          character.name,\r\n                          character.actor,\r\n                          character.image,\r\n                          character._id\r\n                        )\r\n                      }\r\n                    >\r\n                      EDIT\r\n                    </button>\r\n                  </>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}