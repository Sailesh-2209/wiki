{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\saile\\\\Desktop\\\\Sailesh\\\\React\\\\Wiki\\\\wiki-client\\\\components\\\\CreateCharacterModal.js\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport modalStyles from \"../styles/Modal.module.css\";\nimport { baseURL } from \"../constants/baseURL\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    height: \"400px\",\n    width: \"550px\",\n    backgroundColor: \"#efefef\"\n  }\n};\nexport default function CreateCharacterModal(props) {\n  const {\n    isCreateCharacterModalOpen,\n    setIsCreateCharacterModalOpen,\n    stateToken,\n    stateUID,\n    pid\n  } = props;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: actor,\n    1: setActor\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: saving,\n    1: setSaving\n  } = useState(false);\n\n  const handleCreateCharacter = () => {\n    setSaving(true);\n    axios.post(`${baseURL}/programs/${pid}`, {\n      createdBy: stateUID,\n      name,\n      image,\n      actor\n    }, {\n      headers: {\n        Authorization: `Bearer ${stateToken}`\n      }\n    }).then(value => {\n      if (value.data.error) {\n        setError(value.data.error);\n        setSaving(false);\n      } else {\n        setIsCreateCharacterModalOpen(false);\n        setSaving(false);\n        Router.reload();\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const handleModalClose = () => {\n    setIsCreateCharacterModalOpen(false);\n    setSaving(false);\n    setError(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isCreateCharacterModalOpen,\n      style: customStyles,\n      children: saving ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.loader,\n        children: /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: modalStyles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.headingContainer,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: modalStyles.heading,\n              children: \"Add a new character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.createCharErrCont,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: error.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.modalBody,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: modalStyles.form,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: modalStyles.name,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: modalStyles.label,\n                  htmlFor: \"name\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: modalStyles.input,\n                  type: \"text\",\n                  id: \"name\",\n                  name: \"name\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: modalStyles.dates,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: modalStyles.label,\n                  htmlFor: \"start\",\n                  children: \"Actor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"start\",\n                  name: \"start\",\n                  className: modalStyles.input,\n                  value: actor,\n                  onChange: e => setActor(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: modalStyles.image,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: modalStyles.label,\n                  htmlFor: \"image\",\n                  children: \"Image Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"image\",\n                  name: \"image\",\n                  className: modalStyles.input,\n                  value: image,\n                  onChange: e => setImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modalStyles.footer,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: modalStyles.saveButton,\n              onClick: () => handleCreateCharacter(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: modalStyles.cancelButton,\n              onClick: () => handleModalClose(),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["C:/Users/saile/Desktop/Sailesh/React/Wiki/wiki-client/components/CreateCharacterModal.js"],"names":["React","useState","Modal","Router","axios","ClipLoader","modalStyles","baseURL","customStyles","content","top","left","right","bottom","marginRight","transform","height","width","backgroundColor","CreateCharacterModal","props","isCreateCharacterModalOpen","setIsCreateCharacterModalOpen","stateToken","stateUID","pid","name","setName","actor","setActor","image","setImage","error","setError","saving","setSaving","handleCreateCharacter","post","createdBy","headers","Authorization","then","value","data","reload","catch","console","log","handleModalClose","loader","container","headingContainer","heading","divider","createCharErrCont","message","modalBody","form","label","input","e","target","dates","footer","saveButton","cancelButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport Router from \"next/router\";\r\nimport axios from \"axios\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport modalStyles from \"../styles/Modal.module.css\";\r\nimport { baseURL } from \"../constants/baseURL\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    height: \"400px\",\r\n    width: \"550px\",\r\n    backgroundColor: \"#efefef\",\r\n  },\r\n};\r\n\r\nexport default function CreateCharacterModal(props) {\r\n  const {\r\n    isCreateCharacterModalOpen,\r\n    setIsCreateCharacterModalOpen,\r\n    stateToken,\r\n    stateUID,\r\n    pid,\r\n  } = props;\r\n  const [name, setName] = useState(\"\");\r\n  const [actor, setActor] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const handleCreateCharacter = () => {\r\n    setSaving(true);\r\n    axios\r\n      .post(\r\n        `${baseURL}/programs/${pid}`,\r\n        {\r\n          createdBy: stateUID,\r\n          name,\r\n          image,\r\n          actor,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${stateToken}`,\r\n          },\r\n        }\r\n      )\r\n      .then((value) => {\r\n        if (value.data.error) {\r\n          setError(value.data.error);\r\n          setSaving(false);\r\n        } else {\r\n          setIsCreateCharacterModalOpen(false);\r\n          setSaving(false);\r\n          Router.reload();\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsCreateCharacterModalOpen(false);\r\n    setSaving(false);\r\n    setError(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isCreateCharacterModalOpen} style={customStyles}>\r\n        {saving ? (\r\n          <div className={modalStyles.loader}>\r\n            <ClipLoader />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={modalStyles.container}>\r\n              <div className={modalStyles.headingContainer}>\r\n                <h2 className={modalStyles.heading}>Add a new character</h2>\r\n              </div>\r\n              <div className={modalStyles.divider}></div>\r\n              {error ? (\r\n                <div className={modalStyles.createCharErrCont}>\r\n                  <p>{error.message}</p>\r\n                </div>\r\n              ) : (\r\n                <div className={modalStyles.modalBody}>\r\n                  <form className={modalStyles.form}>\r\n                    <div className={modalStyles.name}>\r\n                      <label className={modalStyles.label} htmlFor=\"name\">\r\n                        Name\r\n                      </label>\r\n                      <input\r\n                        className={modalStyles.input}\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className={modalStyles.dates}>\r\n                      <label className={modalStyles.label} htmlFor=\"start\">\r\n                        Actor\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"start\"\r\n                        name=\"start\"\r\n                        className={modalStyles.input}\r\n                        value={actor}\r\n                        onChange={(e) => setActor(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className={modalStyles.image}>\r\n                      <label className={modalStyles.label} htmlFor=\"image\">\r\n                        Image Address\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"image\"\r\n                        name=\"image\"\r\n                        className={modalStyles.input}\r\n                        value={image}\r\n                        onChange={(e) => setImage(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              )}\r\n              <div className={modalStyles.divider}></div>\r\n              <div className={modalStyles.footer}>\r\n                <button\r\n                  className={modalStyles.saveButton}\r\n                  onClick={() => handleCreateCharacter()}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className={modalStyles.cancelButton}\r\n                  onClick={() => handleModalClose()}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}